== Summary

jQuery logger is a tool to inobtrusively trigger a console.log message with an associated jQuery element.  This code can be turned on/off for development/production without being removed.
The logger supports multiple log levels, grouped messages and a backtrace.

== Usage

In-obtrusively log information to an associated element(s) by including the jQuery logger to the chain

    $('div.title').show().log('Title displayed');
    
This will output a console.log message with the included jQuery element as an associated element

Extended default settings by first calling +$.log+ function with a hash of parameters

    $.log({
    
    active: true, /* activate the logger */
			
		backtrace: false, /* outputs console.trace() after the log has been written */
		
		collapsed: false, /* auto collapses console.log groups */
		
		log_level: 'debug', /* available log levels:  info, debug, warn, error */
		
		windows_safe: false /* replaces console.log with alert popup */
		
    });

Depending on current +log_level+ only messsage of greater severity are passed.  

    $.log({
    	log_level : 'warn'
    });

To set a message severity, provide the 2nd paramater a string. If the conditions above are set, then this message would not appear in the console.log

    $('div.title').show().log('Title displayed', 'info');
    
but this one, would...

    $('div.title').hide().log('Title hidden', 'warn');
    
If +console.log+ is not available then you can enable +windows_safe+ and an alert message will be presented

    $.log({
    	windows_safe : true
    });